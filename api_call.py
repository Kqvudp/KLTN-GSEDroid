from androguard.core.bytecodes.apk import APK
from androguard.core.analysis.analysis import Analysis
from androguard.core.bytecodes.dvm import DalvikVMFormat
from androguard.misc import AnalyzeAPK

class APIExtractor:
    def __init__(self, d):
        self.d = d

    def extract_api_calls(self):
        """Extract API calls"""
        api_calls = []
        methods_calling_apis = set()
        methods_called_by_apis = set()
        third_party_prefixes = [
            'Landroid'
            'Landroid.accessibilityservice'
            'Landroid.accounts'
            'Landroid.adservices'
            'Landroid.adservices.adid'
            'Landroid.adservices.adselection'
            'Landroid.adservices.appsetid'
            'Landroid.adservices.common'
            'Landroid.adservices.customaudience'
            'Landroid.adservices.exceptions'
            'Landroid.adservices.measurement'
            'Landroid.adservices.ondevicepersonalization'
            'Landroid.adservices.signals'
            'Landroid.adservices.topics'
            'Landroid.animation'
            'Landroid.annotation'
            'Landroid.app'
            'Landroid.app.admin'
            'Landroid.app.appsearch'
            'Landroid.app.appsearch.exceptions'
            'Landroid.app.appsearch.observer'
            'Landroid.app.appsearch.util'
            'Landroid.app.assist'
            'Landroid.app.backup'
            'Landroid.app.blob'
            'Landroid.app.job'
            'Landroid.app.people'
            'Landroid.app.role'
            'Landroid.app.sdksandbox'
            'Landroid.app.sdksandbox.sdkprovider'
            'Landroid.app.slice'
            'Landroid.app.usage'
            'Landroid.appwidget'
            'Landroid.bluetooth'
            'Landroid.bluetooth.le'
            'Landroid.companion'
            'Landroid.companion.virtual'
            'Landroid.content'
            'Landroid.content.om'
            'Landroid.content.pm'
            'Landroid.content.pm.verify.domain'
            'Landroid.content.res'
            'Landroid.content.res.loader'
            'Landroid.credentials'
            'Landroid.crypto.hpke'
            'Landroid.database'
            'Landroid.database.sqlite'
            'Landroid.devicelock'
            'Landroid.drm'
            'Landroid.gesture'
            'Landroid.graphics'
            'Landroid.graphics.drawable'
            'Landroid.graphics.drawable.shapes'
            'Landroid.graphics.fonts'
            'Landroid.graphics.pdf'
            'Landroid.graphics.pdf.content'
            'Landroid.graphics.pdf.models'
            'Landroid.graphics.pdf.models.selection'
            'Landroid.graphics.text'
            'Landroid.hardware'
            'Landroid.hardware.biometrics'
            'Landroid.hardware.camera2'
            'Landroid.hardware.camera2.params'
            'Landroid.hardware.display'
            'Landroid.hardware.fingerprint'
            'Landroid.hardware.input'
            'Landroid.hardware.lights'
            'Landroid.hardware.usb'
            'Landroid.health.connect'
            'Landroid.health.connect.changelog'
            'Landroid.health.connect.datatypes'
            'Landroid.health.connect.datatypes.units'
            'Landroid.icu.lang'
            'Landroid.icu.math'
            'Landroid.icu.number'
            'Landroid.icu.text'
            'Landroid.icu.util'
            'Landroid.inputmethodservice'
            'Landroid.location'
            'Landroid.location.altitude'
            'Landroid.location.provider'
            'Landroid.media'
            'Landroid.media.audiofx'
            'Landroid.media.browse'
            'Landroid.media.effect'
            'Landroid.media.metrics'
            'Landroid.media.midi'
            'Landroid.media.projection'
            'Landroid.media.session'
            'Landroid.media.tv'
            'Landroid.media.tv.interactive'
            'Landroid.mtp'
            'Landroid.net'
            'Landroid.net.eap'
            'Landroid.net.http'
            'Landroid.net.ipsec.ike'
            'Landroid.net.ipsec.ike.exceptions'
            'Landroid.net.nsd'
            'Landroid.net.rtp'
            'Landroid.net.sip'
            'Landroid.net.ssl'
            'Landroid.net.vcn'
            'Landroid.net.wifi'
            'Landroid.net.wifi.aware'
            'Landroid.net.wifi.hotspot2'
            'Landroid.net.wifi.hotspot2.omadm'
            'Landroid.net.wifi.hotspot2.pps'
            'Landroid.net.wifi.p2p'
            'Landroid.net.wifi.p2p.nsd'
            'Landroid.net.wifi.rtt'
            'Landroid.nfc'
            'Landroid.nfc.cardemulation'
            'Landroid.nfc.tech'
            'Landroid.opengl'
            'Landroid.os'
            'Landroid.os.ext'
            'Landroid.os.health'
            'Landroid.os.storage'
            'Landroid.os.strictmode'
            'Landroid.preference'
            'Landroid.print'
            'Landroid.print.pdf'
            'Landroid.printservice'
            'Landroid.provider'
            'Landroid.renderscript'
            'Landroid.sax'
            'Landroid.se.omapi'
            'Landroid.security'
            'Landroid.security.identity'
            'Landroid.security.keystore'
            'Landroid.service.assist.classification'
            'Landroid.service.autofill'
            'Landroid.service.carrier'
            'Landroid.service.chooser'
            'Landroid.service.controls'
            'Landroid.service.controls.actions'
            'Landroid.service.controls.templates'
            'Landroid.service.credentials'
            'Landroid.service.dreams'
            'Landroid.service.media'
            'Landroid.service.notification'
            'Landroid.service.persistentdata'
            'Landroid.service.quickaccesswallet'
            'Landroid.service.quicksettings'
            'Landroid.service.restrictions'
            'Landroid.service.textservice'
            'Landroid.service.voice'
            'Landroid.service.vr'
            'Landroid.service.wallpaper'
            'Landroid.speech'
            'Landroid.speech.tts'
            'Landroid.system'
            'Landroid.telecom'
            'Landroid.telephony'
            'Landroid.telephony.cdma'
            'Landroid.telephony.data'
            'Landroid.telephony.emergency'
            'Landroid.telephony.euicc'
            'Landroid.telephony.gsm'
            'Landroid.telephony.ims'
            'Landroid.telephony.ims.feature'
            'Landroid.telephony.ims.stub'
            'Landroid.telephony.mbms'
            'Landroid.test'
            'Landroid.test.mock'
            'Landroid.test.suitebuilder'
            'Landroid.test.suitebuilder.annotation'
            'Landroid.text'
            'Landroid.text.format'
            'Landroid.text.method'
            'Landroid.text.style'
            'Landroid.text.util'
            'Landroid.transition'
            'Landroid.util'
            'Landroid.util.proto'
            'Landroid.view'
            'Landroid.view.accessibility'
            'Landroid.view.animation'
            'Landroid.view.autofill'
            'Landroid.view.contentcapture'
            'Landroid.view.displayhash'
            'Landroid.view.inputmethod'
            'Landroid.view.inspector'
            'Landroid.view.textclassifier'
            'Landroid.view.textservice'
            'Landroid.view.translation'
            'Landroid.webkit'
            'Landroid.widget'
            'Landroid.widget.inline'
            'Landroid.window'
            'Ldalvik.annotation'
            'Ldalvik.annotation.optimization'
            'Ldalvik.bytecode'
            'Ldalvik.system'
            'Ljava.awt.font'
            'Ljava.beans'
            'Ljava.io'
            'Ljava.lang'
            'Ljava.lang.annotation'
            'Ljava.lang.invoke'
            'Ljava.lang.ref'
            'Ljava.lang.reflect'
            'Ljava.lang.runtime'
            'Ljava.math'
            'Ljava.net'
            'Ljava.nio'
            'Ljava.nio.channels'
            'Ljava.nio.channels.spi'
            'Ljava.nio.charset'
            'Ljava.nio.charset.spi'
            'Ljava.nio.file'
            'Ljava.nio.file.attribute'
            'Ljava.nio.file.spi'
            'Ljava.security'
            'Ljava.security.acl'
            'Ljava.security.cert'
            'Ljava.security.interfaces'
            'Ljava.security.spec'
            'Ljava.sql'
            'Ljava.text'
            'Ljava.time'
            'Ljava.time.chrono'
            'Ljava.time.format'
            'Ljava.time.temporal'
            'Ljava.time.zone'
            'Ljava.util'
            'Ljava.util.concurrent'
            'Ljava.util.concurrent.atomic'
            'Ljava.util.concurrent.locks'
            'Ljava.util.function'
            'Ljava.util.jar'
            'Ljava.util.logging'
            'Ljava.util.prefs'
            'Ljava.util.random'
            'Ljava.util.regex'
            'Ljava.util.stream'
            'Ljava.util.zip'
            'Ljavax.annotation.processing'
            'Ljavax.crypto'
            'Ljavax.crypto.interfaces'
            'Ljavax.crypto.spec'
            'Ljavax.microedition.khronos.egl'
            'Ljavax.microedition.khronos.opengles'
            'Ljavax.net'
            'Ljavax.net.ssl'
            'Ljavax.security.auth'
            'Ljavax.security.auth.callback'
            'Ljavax.security.auth.login'
            'Ljavax.security.auth.x500'
            'Ljavax.security.cert'
            'Ljavax.sql'
            'Ljavax.xml'
            'Ljavax.xml.datatype'
            'Ljavax.xml.namespace'
            'Ljavax.xml.parsers'
            'Ljavax.xml.transform'
            'Ljavax.xml.transform.dom'
            'Ljavax.xml.transform.sax'
            'Ljavax.xml.transform.stream'
            'Ljavax.xml.validation'
            'Ljavax.xml.xpath'
            'Lorg.apache.http.conn'
            'Lorg.apache.http.conn.scheme'
            'Lorg.apache.http.conn.ssl'
            'Lorg.apache.http.params'
            'Lorg.json'
            'Lorg.w3c.dom'
            'Lorg.w3c.dom.ls'
            'Lorg.xml.sax'
            'Lorg.xml.sax.ext'
            'Lorg.xml.sax.helpers'
            'Lorg.xmlpull.v1'
            'Lorg.xmlpull.v1.sax2'
        ]

        for method in self.d.get_methods():
            method_name = method.get_name()

            if method.get_code():
                for instruction in method.get_code().get_bc().get_instructions():
                    if instruction.get_name().startswith('invoke-'):
                        called_method = instruction.get_output().split(',')[-1].strip()
                        if any(called_method.startswith(prefix) for prefix in third_party_prefixes):
                            methods_calling_apis.add(method_name)
                            methods_called_by_apis.add(called_method)
                            api_calls.append(called_method)

        # Filter out isolated nodes and format API calls
        filtered_api_calls = [
            call.lstrip('L').split('(')[0] for call in set(api_calls)  # Use set to remove duplicates
            if call in methods_calling_apis or call in methods_called_by_apis
        ]

        return filtered_api_calls
    
# Load APK and extract information
apk_path = "sample"  # Update with the actual APK path
apk, dex_list, dx = AnalyzeAPK(apk_path)

total_api_calls = 0
all_api_calls = []

for dex in dex_list:
    extractor = APIExtractor(dex)  # Initialize APIExtractor for each DEX
    api_calls = extractor.extract_api_calls()  # Extract API calls
    total_api_calls += len(api_calls)
    all_api_calls.extend(api_calls)

for call in all_api_calls:
    print(call)

print(f"Total API calls: {total_api_calls}")